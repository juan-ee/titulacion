{"version":3,"sources":["serviceWorker.js","redux/actionTypes.js","components/SearchMap.js","components/PreferencesForm.js","redux/actions.js","components/RouteMap.js","components/Tours.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","actionTypes","_","require","compose","withProps","lifecycle","withScriptjs","withGoogleMap","GoogleMap","Marker","SearchBox","SearchMapComponent","googleMapURL","loadingElement","react_default","a","createElement","style","height","containerElement","mapElement","componentWillMount","_this","this","refs","setState","center","lat","lng","markers","onMapMounted","ref","map","onSearchBoxMounted","searchBox","onPlacesChanged","ev","setLocation","nextMarkers","getPlaces","place","position","geometry","nextCenter","get","state","undefined","length","toJSON","onMapClicked","new_marker","latLng","props","defaultZoom","onClick","options","mapTypeControl","controlPosition","google","maps","ControlPosition","TOP_CENTER","type","placeholder","boxSizing","border","width","marginTop","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","marker","index","key","icon","PreferencesFormComponent","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","validator","allValid","history","push","showMessages","forceUpdate","handleSelectCategory","_e$target","target","checked","value","updateCategories","concat","toConsumableArray","request","categories","filter","v","handleDays","new_number","Number","setDays","onTimeChange","scheduleType","time","setTime","format","SimpleReactValidator","element","message","color","messages","required","min","_this2","className","onSubmit","backgroundColor","htmlFor","id","totalDays","onChange","setStartDate","moment","add","startDate","PreferencesForm_Schedule","title","start","end","wtf","travelSchedule","lunchTime","text","option","cursor","Component","Schedule","_ref","PreferencesForm_LabelTimePicker","labelText","defaultTime","schedule","LabelTimePicker","_ref2","Fragment","marginRight","time_picker","defaultValue","connect","objectSpread","dispatch","days","Actions","payload","setDaysAction","date","newDate","updateCategoriesAction","newTime","setTimeAction","setLocationAction","withRouter","enhance","colours","SingleRouteMap","lib","defaultCenter","tour","RouteMap_PointsComponent","n","name","restaurants","restaurant","i","CustomMarker","assign","MultipleRoutesMap","data","reduce","tours","all","PointsComponent","_ref3","elem","path","encoding","decodePath","points","strokeColor","withStateHandlers","isOpen","onToggleOpen","_ref4","onCloseClick","href","website","rel","url","ToursComponent","loading","selected","toRender","Tours_TourDetails","handleSelected","axios","post","then","response","setFetchedData","catch","err","alert","react_loader_spinner_default","TourDetails","scope","slice","fetchedData","objectWithoutProperties","setFetchedDataAction","App","react_router_dom","react_router","exact","component","PreferencesForm","Tours","initialState","createStore","arguments","action","_action$payload","defineProperty","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+MAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,qMClBSC,EACD,WADCA,EAEK,iBAFLA,EAGQ,oBAHRA,EAIQ,oBAJRA,EAKQ,oBALRA,EAMO,mBCJhBC,EAAIC,EAAQ,OACwBA,EAAQ,IAA1CC,YAASC,cAAWC,gBAMxBH,EAAQ,IAJVI,iBACAC,kBACAC,cACAC,WAGAC,EACER,EAAQ,KADVQ,UAGWC,EAAqBR,EAChCC,EAAU,CACRQ,aACE,gIACFC,eAAgBC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,SACpCC,iBAAkBL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,WACtCE,WAAYN,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,WAElCb,EAAU,CACRgB,mBADQ,WACa,IAAAC,EAAAC,KACbC,EAAO,GAEbD,KAAKE,SAAS,CACZC,OAAQ,CACNC,KAAM,QACNC,KAAM,WAERC,QAAS,GACTC,aAAc,SAAAC,GACZP,EAAKQ,IAAMD,GAEbE,mBAAoB,SAAAF,GAClBP,EAAKU,UAAYH,GAEnBI,gBAAiB,SAACC,EAAIC,GACpB,IAEMC,EAFSd,EAAKU,UAAUK,YAEHP,IAAI,SAAAQ,GAAK,MAAK,CACvCC,SAAUD,EAAME,SAAS7C,YAErB8C,EAAa1C,EAAE2C,IACnBN,EACA,aACAhB,EAAKuB,MAAMnB,aAGiBoB,IAA1BR,EAAYS,OAAO,IACrBV,EAAYC,EAAY,GAAGG,SAASO,UAEtC1B,EAAKG,SAAS,CACZC,OAAQiB,EACRd,QAASS,KAGbW,aAAc,SAACC,EAAYb,GACzBf,EAAKG,SAAS,CACZI,QAAS,CAAC,CAAEY,SAAUS,EAAWC,WAEnCd,EAAYa,EAAWC,OAAOH,gBAMtC1C,EACAC,EAvDgCJ,CAwDhC,SAAAiD,GAAK,OACLtC,EAAAC,EAAAC,cAACR,EAAD,CACEuB,IAAKqB,EAAMtB,aACXuB,YAAa,GACb3B,OAAQ0B,EAAM1B,OACd4B,QAAS,SAAAlB,GAAE,OAAIgB,EAAMH,aAAab,EAAIgB,EAAMf,cAC5CkB,QAAS,CAAEC,gBAAgB,IAE3B1C,EAAAC,EAAAC,cAACN,EAAD,CACEqB,IAAKqB,EAAMnB,mBACXwB,gBAAiBC,OAAOC,KAAKC,gBAAgBC,WAC7C1B,gBAAiB,SAAAC,GAAE,OAAIgB,EAAMjB,gBAAgBC,EAAIgB,EAAMf,eAEvDvB,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACLC,YAAY,sCACZ9C,MAAO,CACL+C,UAAS,aACTC,OAAM,wBACNC,MAAK,QACLhD,OAAM,OACNiD,UAAS,OACTC,QAAO,SACPC,aAAY,MACZC,UAAS,+BACTC,SAAQ,OACRC,QAAO,OACPC,aAAY,eAIjBrB,EAAMvB,QAAQG,IAAI,SAAC0C,EAAQC,GAAT,OACjB7D,EAAAC,EAAAC,cAACP,EAAD,CACEmE,IAAKD,EACLlC,SAAUiC,EAAOjC,SACjBoC,KAA+B,0BCzFjCC,cACJ,SAAAA,EAAY1B,GAAO,IAAA9B,EAAA,OAAAyD,OAAAC,EAAA,EAAAD,CAAAxD,KAAAuD,IACjBxD,EAAAyD,OAAAE,EAAA,EAAAF,CAAAxD,KAAAwD,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA5D,KAAM6B,KAqKRgC,aAAe,SAAAC,GACbA,EAAEC,iBACEhE,EAAKiE,UAAUC,WACjBlE,EAAK8B,MAAMqC,QAAQC,KAAK,WAExBpE,EAAKiE,UAAUI,eACfrE,EAAKsE,gBA5KUtE,EAgLnBuE,qBAAuB,SAAAR,GAAK,IAAAS,EACCT,EAAEU,OAArBC,EADkBF,EAClBE,QAASC,EADSH,EACTG,MAEbD,EACF1E,EAAK8B,MAAM8C,iBAAX,GAAAC,OAAApB,OAAAqB,EAAA,EAAArB,CAAgCzD,EAAK8B,MAAMiD,QAAQC,YAAnD,CAA+DL,KAE/D3E,EAAK8B,MAAM8C,iBACT5E,EAAK8B,MAAMiD,QAAQC,WAAWC,OAAO,SAAAC,GAAC,OAAIA,IAAMP,MAvLnC3E,EA4LnBmF,WAAa,SAAApB,GACX,IAAMqB,EAAaC,OAAOtB,EAAEU,OAAOE,OACnC3E,EAAK8B,MAAMwD,QAAQF,EAAa,EAAIA,EAAa,IA9LhCpF,EAiMnBuF,aAAe,SAACzE,EAAI0E,EAAcC,GAAnB,OACbzF,EAAK8B,MAAM4D,QACTF,EACAC,EACO,OAAP3E,EAAcA,EAAKA,EAAG6E,OAAO,UAnM/B3F,EAAKiE,UAAY,IAAI2B,IAAqB,CACxCC,QAAS,SAAAC,GAAO,OAAItG,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEoG,MAAO,QAASvG,EAAAC,EAAAC,cAAA,cAASoG,KAC3DE,SAAU,CACRC,SAAU,oBACVC,IAAK,+CANQlG,wEAWV,IAAAmG,EAAAlG,KAgBP,OACET,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,yBACb5G,EAAAC,EAAAC,cAAA,QACE0G,UAAU,kCACVC,SAAUpG,KAAK6D,aACfnE,MAAO,CAAE2G,gBAAiB,YAE1B9G,EAAAC,EAAAC,cAAA,MAAI0G,UAAU,0BAAd,+BAGA5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,aACb5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,kBACb5G,EAAAC,EAAAC,cAAA,SACE6G,QAAQ,YACRH,UAAU,sDAEV5G,EAAAC,EAAAC,cAAA,mCAEFF,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,uCACb5G,EAAAC,EAAAC,cAAA,SACE8C,KAAK,SACL4D,UAAU,eACVI,GAAG,YACHN,IAAK,EACLvB,MAAO1E,KAAK6B,MAAMiD,QAAQ0B,UAC1BC,SAAUzG,KAAKkF,aAEhBlF,KAAKgE,UAAU6B,QACd,YACA7F,KAAK6B,MAAMiD,QAAQ0B,UACnB,cAKNjH,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,kBACb5G,EAAAC,EAAAC,cAAA,SACE6G,QAAQ,YACRH,UAAU,sDAEV5G,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,uCACb5G,EAAAC,EAAAC,cAAA,SACE8C,KAAK,OACL4D,UAAU,eACVI,GAAG,YACHE,SAAU,SAAA5F,GAAE,OAAIqF,EAAKrE,MAAM6E,aAAa7F,EAAG2D,OAAOE,QAClDuB,IAAKU,MACFC,IAAI,EAAG,KACPlB,OAAO,gBAEX1F,KAAKgE,UAAU6B,QACd,YACA7F,KAAK6B,MAAMiD,QAAQ+B,UACnB,cAMNtH,EAAAC,EAAAC,cAACqH,EAAD,CACEC,MAAM,iCACNxB,aAAa,iBACbyB,MAAM,QACNC,IAAI,QACJ3B,aAActF,KAAKsF,aACnBtB,UAAWhE,KAAKgE,UAChBkD,IAAKlH,KAAK6B,MAAMiD,QAAQqC,iBAG1B5H,EAAAC,EAAAC,cAACqH,EAAD,CACEC,MAAM,2BACNxB,aAAa,YACbyB,MAAM,QACNC,IAAI,QACJ3B,aAActF,KAAKsF,aACnBtB,UAAWhE,KAAKgE,UAChBkD,IAAKlH,KAAK6B,MAAMiD,QAAQsC,YAG1B7H,EAAAC,EAAAC,cAAA,gDACCO,KAAKgE,UAAU6B,QACd,aACA7F,KAAK6B,MAAMiD,QAAQC,WACnB,SAEFxF,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,OACb5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,UACf5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,cAxGG,CAC1B,CAAEkB,KAAM,SAAU3C,MAAO,UACzB,CAAE2C,KAAM,WAAY3C,MAAO,YAC3B,CAAE2C,KAAM,uBAAwB3C,MAAO,eACvC,CAAE2C,KAAM,yBAA0B3C,MAAO,kBACzC,CAAE2C,KAAM,cAAe3C,MAAO,YAC9B,CAAE2C,KAAM,WAAY3C,MAAO,UAC3B,CAAE2C,KAAM,0BAA2B3C,MAAO,aAC1C,CAAE2C,KAAM,oBAAkB3C,MAAO,gBACjC,CAAE2C,KAAM,YAAa3C,MAAO,UAC5B,CAAE2C,KAAM,UAAW3C,MAAO,QAC1B,CAAE2C,KAAM,WAAY3C,MAAO,WAC3B,CAAE2C,KAAM,gBAAc3C,MAAO,QA6FEjE,IAAI,SAAC6G,EAAQlE,GAAT,OACvB7D,EAAAC,EAAAC,cAAA,OACE4D,IAAG,MAAAuB,OAAQxB,GACX+C,UAAU,wCAEV5G,EAAAC,EAAAC,cAAA,SACE8G,GAAE,QAAA3B,OAAUxB,GACZb,KAAK,WACL4D,UAAU,uBACVzB,MAAO4C,EAAO5C,MACd+B,SAAUP,EAAK5B,uBAEjB/E,EAAAC,EAAAC,cAAA,SACE6G,QAAO,QAAA1B,OAAUxB,GACjB+C,UAAU,uBACVzG,MAAO,CAAE6H,OAAQ,YAEhBD,EAAOD,UAKhB9H,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,WAEjB5G,EAAAC,EAAAC,cAAA,gCACCO,KAAKgE,UAAU6B,QACd,WACA7F,KAAK6B,MAAMiD,QAAQxG,SACnB,YAEFiB,EAAAC,EAAAC,cAACL,EAAD,CAAoB0B,YAAad,KAAK6B,MAAMf,cAE5CvB,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,OACb5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,UACf5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,UACb5G,EAAAC,EAAAC,cAAA,UACE8C,KAAK,SACL4D,UAAU,6CAFZ,wBAOF5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,qBAhKUqB,aA0MjCC,EAAW,SAAAC,GAAA,IACfX,EADeW,EACfX,MACAxB,EAFemC,EAEfnC,aACAyB,EAHeU,EAGfV,MACAC,EAJeS,EAIfT,IACA3B,EALeoC,EAKfpC,aACA4B,EANeQ,EAMfR,IACAlD,EAPe0D,EAOf1D,UAPe,OASfzE,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,cACb5G,EAAAC,EAAAC,cAAA,UAAKsH,GACLxH,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,eACb5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,UACf5G,EAAAC,EAAAC,cAACkI,EAAD,CACExB,UAAU,8BACVyB,UAAU,SACVC,YAAab,EACb1B,aAAcA,EACdwC,SAAUvC,EACVC,KAAK,QACLxB,UAAWA,EACXkD,IAAKA,IAEP3H,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,UACf5G,EAAAC,EAAAC,cAACkI,EAAD,CACExB,UAAU,8BACVyB,UAAU,MACVC,YAAaZ,EACb3B,aAAcA,EACdwC,SAAUvC,EACVC,KAAK,MACLxB,UAAWA,EACXkD,IAAKA,IAEP3H,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,aAKf4B,EAAkB,SAAAC,GAAA,IACtBJ,EADsBI,EACtBJ,UACAC,EAFsBG,EAEtBH,YACAvC,EAHsB0C,EAGtB1C,aACAwC,EAJsBE,EAItBF,SACAtC,EALsBwC,EAKtBxC,KACAxB,EANsBgE,EAMtBhE,UACAkD,EAPsBc,EAOtBd,IAPsB,OAStB3H,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyI,SAAA,KACE1I,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,kBACb5G,EAAAC,EAAAC,cAAA,SACE6G,QAAQ,cACRH,UAAU,iBACVzG,MAAO,CAAEwI,YAAa,WAErBN,GAEHrI,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CACE5B,GAAG,cACH6B,aAAczB,IAAOkB,EAAa,SAClCnC,OAAO,QACPe,SAAU,SAAA5F,GAAE,OAAIyE,EAAazE,EAAIiH,EAAUtC,IAC3ChD,YAAY,UAEbwB,EAAU6B,QAAQL,EAAM0B,EAAI1B,GAAO,eAkB3B6C,cAbS,SAAA/G,GAAK,MAAK,CAChCwD,QAAQtB,OAAA8E,EAAA,EAAA9E,CAAA,GAAMlC,KAGW,SAAAiH,GAAQ,MAAK,CACtClD,QAAS,SAAAmD,GAAI,OAAID,EClSU,SAAAC,GAAI,MAAK,CACpCjG,KAAMkG,EACNC,QAAS,CACPF,SD+RwBG,CAAcH,KACxC9B,aAAc,SAAAkC,GAAI,OAAIL,EC5RsB,CAC5ChG,KAAMkG,EACNC,QAAS,CACPG,QDyRgDD,MAClDjE,iBAAkB,SAAAI,GAAU,OAAIwD,ECtRI,SAAAxD,GAAU,MAAK,CACnDxC,KAAMkG,EACNC,QAAS,CACP3D,eDmRuC+D,CAAuB/D,KAChEU,QAAS,SAAClD,EAAMiD,EAAMuD,GAAb,OACPR,ECjRyB,SAAChG,EAAMiD,EAAMuD,GAAb,MAA0B,CACrDxG,KAAMkG,EACNC,QAAS,CACPnG,OACAiD,OACAuD,YD4QSC,CAAczG,EAAMiD,EAAMuD,KACrCjI,YAAa,SAAAxC,GAAQ,OAAIiK,ECzQM,SAAAjK,GAAQ,MAAK,CAC5CiE,KAAMkG,EACNC,QAAS,CACPpK,aDsQgC2K,CAAkB3K,OAGvC+J,CAGba,YAAW3F,+CEnSP4F,EAAUvK,kBACdC,oBAAU,CACRQ,aACE,gIACFC,eAAgBC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,UACpCC,iBAAkBL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,YACtCE,WAAYN,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAM,YAElCZ,eACAC,iBAGIoK,EAAU,CACd,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAoDWC,EAAiBF,EAjDV,SAAAtH,GAAK,OACvBtC,EAAAC,EAAAC,cAAC6J,EAAA,UAAD,CAAWxH,YAAa,GAAIyH,cAAa/F,OAAA8E,EAAA,EAAA9E,CAAA,GAAO3B,EAAM2H,KAAK,GAAGlL,WAC5DiB,EAAAC,EAAAC,cAACgK,EAAD,CACEpG,IAAG,OAAAuB,OAAS/C,EAAM6H,GAClBC,KAAI,OAAA/E,OAAS/C,EAAM6H,GACnB5D,MAAOsD,EAAQvH,EAAM6H,GACrBF,KAAM3H,EAAM2H,OAGb3H,EAAM+H,YAAYnJ,IAAI,SAACoJ,EAAYC,GAAb,OACrBvK,EAAAC,EAAAC,cAACsK,GAADvG,OAAAwG,OAAA,CACE3G,IAAG,aAAAuB,OAAekF,IACdD,EAFN,CAGE3I,SAAQsC,OAAA8E,EAAA,EAAA9E,CAAA,GAAOqG,EAAWvL,UAC1BgF,KAA+B,yBAoC1B2G,EAAoBd,EA9BV,SAAAtH,GAAK,OAC1BtC,EAAAC,EAAAC,cAAC6J,EAAA,UAAD,CACExH,YAAa,GACbyH,cAAa/F,OAAA8E,EAAA,EAAA9E,CAAA,GAAO3B,EAAMqI,KAAK,GAAGV,KAAK,GAAGlL,WAEzCuD,EAAMqI,KACJC,OAAO,SAACC,EAAD1C,GAAA,IAAU8B,EAAV9B,EAAU8B,KAAV,SAAA5E,OAAApB,OAAAqB,EAAA,EAAArB,CAAyB4G,GAAzB,CAAgCZ,KAAO,IAC9C/I,IAAI,SAAC+I,EAAMM,GAAP,OACHvK,EAAAC,EAAAC,cAACgK,EAAD,CACEpG,IAAG,OAAAuB,OAASkF,GACZH,KAAI,OAAA/E,OAASkF,GACbhE,MAAOsD,EAAQU,GACfN,KAAMA,MAIX3H,EAAMqI,KACJC,OAAO,SAACE,EAADrC,GAAA,IAAQ4B,EAAR5B,EAAQ4B,YAAR,SAAAhF,OAAApB,OAAAqB,EAAA,EAAArB,CAA8B6G,GAA9B7G,OAAAqB,EAAA,EAAArB,CAAsCoG,KAAc,IAC3DnJ,IAAI,SAACoJ,EAAYC,GAAb,OACHvK,EAAAC,EAAAC,cAACsK,GAADvG,OAAAwG,OAAA,CACE3G,IAAG,aAAAuB,OAAekF,IACdD,EAFN,CAGE3I,SAAQsC,OAAA8E,EAAA,EAAA9E,CAAA,GAAOqG,EAAWvL,UAC1BgF,KAA+B,yBASnCgH,EAAkB,SAAAC,GAA2B,IAAxBZ,EAAwBY,EAAxBZ,KAAMH,EAAkBe,EAAlBf,KAAM1D,EAAYyE,EAAZzE,MACjC4D,EAAI,EAER,OACEnK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyI,SAAA,KACGuB,EAAK/I,IAAI,SAAC+J,EAAMV,GACf,OAAQU,EAAKjI,MACX,IAAK,MAEH,OADAmH,IAEEnK,EAAAC,EAAAC,cAACsK,GAADvG,OAAAwG,OAAA,CACE3G,IAAG,GAAAuB,OAAK+E,EAAL,KAAA/E,OAAakF,GAChB5I,SAAQsC,OAAA8E,EAAA,EAAA9E,CAAA,GAAOgH,EAAKlM,WAChBkM,EAHN,CAIElH,KAAI,iEAAAsB,OAAmE8E,EAAnE,KAAA9E,OAAwEkB,MAIlF,IAAK,QACH,OACEvG,EAAAC,EAAAC,cAAC6J,EAAA,SAAD,CACEjG,IAAG,GAAAuB,OAAK+E,EAAL,KAAA/E,OAAakF,GAChBW,KAAMtI,OAAOC,KAAKjB,SAASuJ,SAASC,WAAWH,EAAKI,QACpD5I,QAAS,CAAE6I,YAAW,IAAAjG,OAAMkB,MAIlC,IAAK,OACH,OACEvG,EAAAC,EAAAC,cAAC6J,EAAA,OAAD,CACEjG,IAAG,GAAAuB,OAAK+E,EAAL,KAAA/E,OAAakF,GAChB5I,SAAUsJ,EAAKlM,SACfgF,KAA+B,YAE9B,KAIP,QACE,OAAO,UAObyG,GAAenL,kBACnBkM,4BACE,iBAAO,CACLC,QAAQ,IAEV,CACEC,aAAc,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,OAAH,OAAgB,iBAAO,CACnCA,QAASA,OAPInM,CAWnB,SAAAiD,GAAK,OACLtC,EAAAC,EAAAC,cAAC6J,EAAA,OAAD,CACEpI,SAAUW,EAAMX,SAChBa,QAASF,EAAMmJ,aACf1H,KAAMzB,EAAMyB,MAEXzB,EAAMkJ,QACLxL,EAAAC,EAAAC,cAAC6J,EAAA,WAAD,CAAY4B,aAAcrJ,EAAMmJ,cAC9BzL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKoC,EAAM8H,MACXpK,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,qBACCoC,EAAMiG,SAASd,OAElBzH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,kBACCoC,EAAMiG,SAASb,KAElB1H,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,KAAG0L,KAAMtJ,EAAMuJ,QAAS5G,OAAO,SAAS6G,IAAI,uBACzCxJ,EAAMuJ,UAGX7L,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAG0L,KAAMtJ,EAAMyJ,IAAK9G,OAAO,SAAS6G,IAAI,uBAAxC,8CC1LNE,8MACJjK,MAAQ,CACNkK,SAAS,EACTC,UAAW,KAoBbC,SAAW,WACT,OAA6B,IAAzB3L,EAAKuB,MAAMmK,SACN1L,EAAK8B,MAAMqI,KAAK1I,OAAS,EAC9BjC,EAAAC,EAAAC,cAACwK,EAAD,CAAmBC,KAAMnK,EAAK8B,MAAMqI,OAClC,KAGF3K,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyI,SAAA,KACE1I,EAAAC,EAAAC,cAAC4J,EAAD7F,OAAAwG,OAAA,GACMjK,EAAK8B,MAAMqI,KAAKnK,EAAKuB,MAAMmK,UADjC,CAEE/B,EAAG3J,EAAKuB,MAAMmK,YAEhBlM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACkM,GAAD,CAAanC,KAAMzJ,EAAK8B,MAAMqI,KAAKnK,EAAKuB,MAAMmK,UAAUjC,WA8ChEoC,eAAiB,SAAA/K,GACfd,EAAKG,SAAS,CAAEuL,SAAUrG,OAAOvE,EAAG2D,OAAOE,6FA9EzB,IAAAwB,EAAAlG,KACa,IAA3BA,KAAK6B,MAAMqI,KAAK1I,SAClBxB,KAAKE,SAAS,CAAEsL,SAAS,IAEzBK,KACGC,KAAK,QAAS9L,KAAK6B,MAAMiD,SACzBiH,KAAK,SAAAC,GACJ9F,EAAKhG,SAAS,CAAEsL,SAAS,IACzBtF,EAAKrE,MAAMoK,eAAeD,EAAS9B,QAEpCgC,MAAM,SAAAC,GACLjG,EAAKhG,SAAS,CAAEsL,SAAS,IACzBY,MAAMD,EAAItG,6CAyBhB,OACEtG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyI,SAAA,KACGjI,KAAKsB,MAAMkK,QACVjM,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,YACb5G,EAAAC,EAAAC,cAAC4M,EAAA7M,EAAD,CAAQ+C,KAAK,kBAGfhD,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,yBACb5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,OAAOzG,MAAO,CAAE2G,gBAAiB,YAC9C9G,EAAAC,EAAAC,cAAA,MAAI0G,UAAU,0BAAd,mBACA5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,aACb5G,EAAAC,EAAAC,cAAA,OAAK0G,UAAU,cACb5G,EAAAC,EAAAC,cAAA,SAAO6G,QAAQ,eACb/G,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,UACE0G,UAAU,eACVI,GAAG,cACH7G,MAAO,CAAE6H,OAAQ,WACjBd,SAAUzG,KAAK4L,gBAEfrM,EAAAC,EAAAC,cAAA,UAAQ2I,cAAe,EAAG1D,OAAQ,GAAlC,SAGC1E,KAAK6B,MAAMqI,KAAKzJ,IAAI,SAAC/B,EAAGoL,GAAJ,OACnBvK,EAAAC,EAAAC,cAAA,UAAQ4D,IAAKyG,EAAGpF,MAAOoF,GAAvB,UACOA,EAAI,OAKhB9J,KAAK0L,sBA1EOlE,aAwFvB8E,GAAc,SAAAzK,GAAK,OACvBtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO0G,UAAU,uBACf5G,EAAAC,EAAAC,cAAA,SAAO0G,UAAU,cACf5G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI8M,MAAM,OAAV,WACAhN,EAAAC,EAAAC,cAAA,MAAI8M,MAAM,OAAV,YAGJhN,EAAAC,EAAAC,cAAA,aACGoC,EAAM2H,KAAKgD,MAAM,GAAG/L,IAAI,SAAC+J,EAAMV,EAAGN,GACjC,OAAQgB,EAAKjI,MACX,IAAK,QACH,OACEhD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI8M,MAAM,OACP/B,EAAK1C,SAASd,MADjB,MAC2BwD,EAAK1C,SAASb,KAEzC1H,EAAAC,EAAAC,cAAA,yBACe,IACS,QAArB+J,EAAKM,EAAI,GAAGvH,KACTiH,EAAKM,EAAI,GAAGH,KACZH,EAAKM,EAAI,GAAGH,OAIxB,IAAK,MACH,OACEpK,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI8M,MAAM,OACP/B,EAAK1C,SAASd,MADjB,MAC2BwD,EAAK1C,SAASb,KAEzC1H,EAAAC,EAAAC,cAAA,uBAAe+K,EAAKb,OAI1B,IAAK,QACH,OACEpK,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAI8M,MAAM,OACP/B,EAAK1C,SAASd,MADjB,MAC2BwD,EAAK1C,SAASb,KAEzC1H,EAAAC,EAAAC,cAAA,+BAIN,QACE,OAAO,YAqBN4I,eAbS,SAAA/G,GAAS,IACvBmL,EAA4BnL,EAA5BmL,YAER,MAAO,CACL3H,QAJ6BtB,OAAAkJ,EAAA,EAAAlJ,CACKlC,EADL,iBAK7B4I,KAAMuC,IAIiB,SAAAlE,GAAQ,MAAK,CACtC0D,eAAgB,SAAA/B,GAAI,OAAI3B,EF1HU,SAAA2B,GAAI,MAAK,CAC3C3H,KAAMkG,EACNC,QAAS,CACPwB,SEuH+ByC,CAAqBzC,OAGzC7B,CAGbkD,ICrJaqB,oLAXX,OACErN,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAACqN,EAAA,EAAD,KACEvN,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,OAAK,EAACtC,KAAK,IAAIuC,UAAWC,IACjC1N,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOrC,KAAK,SAASuC,UAAWE,cANxB1F,+BCHZ2F,GAAe,CACnB3G,UAAW,GACXK,UAAW,KACXvI,SAAU,KACV6I,eAAgB,CACdH,MAAO,OACPC,IAAK,QAEPG,UAAW,CACTJ,MAAO,OACPC,IAAK,QAEPlC,WAAY,GACZ0H,YAAa,ICZAW,gBDeY,WAAkC,IAAjC9L,EAAiC+L,UAAA7L,OAAA,QAAAD,IAAA8L,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAA7L,OAAA,EAAA6L,UAAA,QAAA9L,EAC3D,OAAQ+L,EAAO/K,MACb,KAAKkG,EACH,OAAOjF,OAAA8E,EAAA,EAAA9E,CAAA,GACFlC,EADL,CAEEkF,UAAW8G,EAAO5E,QAAQF,OAG9B,KAAKC,EACH,OAAOjF,OAAA8E,EAAA,EAAA9E,CAAA,GACFlC,EADL,CAEEuF,UAAWyG,EAAO5E,QAAQG,UAI9B,KAAKJ,EACH,OAAOjF,OAAA8E,EAAA,EAAA9E,CAAA,GACFlC,EADL,CAEEyD,WAAYuI,EAAO5E,QAAQ3D,aAI/B,KAAK0D,EAA2B,IAAA8E,EACED,EAAO5E,QAA/BnG,EADsBgL,EACtBhL,KAAMiD,EADgB+H,EAChB/H,KAAMuD,EADUwE,EACVxE,QAEpB,OAAOvF,OAAA8E,EAAA,EAAA9E,CAAA,GACFlC,EADLkC,OAAAgK,GAAA,EAAAhK,CAAA,GAEGjB,EAFHiB,OAAA8E,EAAA,EAAA9E,CAAA,GAGOlC,EAAMiB,GAHbiB,OAAAgK,GAAA,EAAAhK,CAAA,GAIKgC,EAAOuD,MAKd,KAAKN,EACH,OAAOjF,OAAA8E,EAAA,EAAA9E,CAAA,GACFlC,EADL,CAEEhD,SAAUgP,EAAO5E,QAAQpK,WAI7B,KAAKmK,EACH,OAAOjF,OAAA8E,EAAA,EAAA9E,CAAA,GACFlC,EADL,CAEEmL,YAAaa,EAAO5E,QAAQwB,OAGhC,QACE,OAAO5I,IC7DXjD,OAAOoP,8BAAgCpP,OAAOoP,gCCOhDC,IAASC,OACPpO,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CAAUC,MAAOA,IACftO,EAAAC,EAAAC,cAACqO,GAAD,OAEFC,SAASC,eAAe,SViHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpC,KAAK,SAAAqC,GACjCA,EAAaC","file":"static/js/main.5cf4fecc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n    SET_DAYS: \"SET_DAYS\",\n    SET_START_DATE: \"SET_START_DATE\",\n    UPDATE_CATEGORIES: \"UPDATE_CATEGORIES\",\n    SET_SCHEDULE_TIME: \"SET_SCHEDULE_TIME\",\n    SET_USER_LOCATION: \"SET_USER_LOCATION\",\n    SET_FETCHED_DATA: \"SET_FETCHED_DATA\",\n}","/* eslint-disable no-undef */\nimport React from \"react\";\nconst _ = require(\"lodash\");\nconst { compose, withProps, lifecycle } = require(\"recompose\");\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} = require(\"react-google-maps\");\nconst {\n  SearchBox\n} = require(\"react-google-maps/lib/components/places/SearchBox\");\n\nexport const SearchMapComponent = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCKzbdK1wXzCIQf7UAMxpTgV6S5l2AjRGc&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `90%` }} />,\n    containerElement: <div style={{ height: `500px` }} />,\n    mapElement: <div style={{ height: `90%` }} />\n  }),\n  lifecycle({\n    componentWillMount() {\n      const refs = {};\n\n      this.setState({\n        center: {\n          lat: -0.210689,\n          lng: -78.489132\n        },\n        markers: [],\n        onMapMounted: ref => {\n          refs.map = ref;\n        },\n        onSearchBoxMounted: ref => {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: (ev, setLocation) => {\n          const places = refs.searchBox.getPlaces();\n\n          const nextMarkers = places.map(place => ({\n            position: place.geometry.location\n          }));\n          const nextCenter = _.get(\n            nextMarkers,\n            \"0.position\",\n            this.state.center\n          );\n\n          if (nextMarkers.length[0] !== undefined)\n            setLocation(nextMarkers[0].position.toJSON());\n\n          this.setState({\n            center: nextCenter,\n            markers: nextMarkers\n          });\n        },\n        onMapClicked: (new_marker, setLocation) => {\n          this.setState({\n            markers: [{ position: new_marker.latLng }]\n          });\n          setLocation(new_marker.latLng.toJSON());\n          // dispatch(setLocationAction(new_marker.latLng.toJSON()));\n        }\n      });\n    }\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap\n    ref={props.onMapMounted}\n    defaultZoom={15}\n    center={props.center}\n    onClick={ev => props.onMapClicked(ev, props.setLocation)}\n    options={{ mapTypeControl: false }}\n  >\n    <SearchBox\n      ref={props.onSearchBoxMounted}\n      controlPosition={google.maps.ControlPosition.TOP_CENTER}\n      onPlacesChanged={ev => props.onPlacesChanged(ev, props.setLocation)}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"¿A dónde quieres ir de viaje?\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          marginTop: `27px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`\n        }}\n      />\n    </SearchBox>\n    {props.markers.map((marker, index) => (\n      <Marker\n        key={index}\n        position={marker.position}\n        icon={process.env.PUBLIC_URL + \"home-address.png\"}\n      />\n))}\n</GoogleMap>\n));\n","import React, { Component } from \"react\";\nimport { TimePicker } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport moment from \"moment\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { connect } from \"react-redux\";\nimport {\n  setDaysAction,\n  setLocationAction,\n  setStartDateAction,\n  setTimeAction,\n  updateCategoriesAction\n} from \"../redux/actions\";\nimport { SearchMapComponent } from \"./SearchMap\";\nimport { withRouter } from \"react-router-dom\";\n\nclass PreferencesFormComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.validator = new SimpleReactValidator({\n      element: message => <div style={{ color: \"red\" }}><strong>{message}</strong></div>,\n      messages: {\n        required: \"Campo obligatorio\",\n        min: \"Debes seleccionar al menos 1 categoría\"\n      }\n    });\n  }\n\n  render() {\n    const preferences_options = [\n      { text: \"Museos\", value: \"museum\" },\n      { text: \"Acuarios\", value: \"aquarium\" },\n      { text: \"Exposiciones de arte\", value: \"art_gallery\" },\n      { text: \"Parques de diversiones\", value: \"amusement_park\" },\n      { text: \"Cementerios\", value: \"cemetery\" },\n      { text: \"Iglesias\", value: \"church\" },\n      { text: \"Palacios presidenciales\", value: \"city_hall\" },\n      { text: \"Templos hindús\", value: \"hindu_temple\" },\n      { text: \"Mezquitas\", value: \"mosque\" },\n      { text: \"Parques\", value: \"park\" },\n      { text: \"Estadios\", value: \"stadium\" },\n      { text: \"Zoológicos\", value: \"zoo\" }\n    ];\n\n    return (\n      <div className=\"container center_form\">\n        <form\n          className=\"card form-horizontal rounded-lg\"\n          onSubmit={this.handleSubmit}\n          style={{ backgroundColor: \"#FDFCF9\" }}\n        >\n          <h1 className=\"card-title text-center\">\n            Tourist Trip Design Problem\n          </h1>\n          <div className=\"card-body\">\n            <div className=\"form-group row\">\n              <label\n                htmlFor=\"totalDays\"\n                className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 col-form-label\"\n              >\n                <h5>Días de recorrido</h5>\n              </label>\n              <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-6\">\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id=\"totalDays\"\n                  min={1}\n                  value={this.props.request.totalDays}\n                  onChange={this.handleDays}\n                />\n                {this.validator.message(\n                  \"totalDays\",\n                  this.props.request.totalDays,\n                  \"required\"\n                )}\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <label\n                htmlFor=\"startDate\"\n                className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 col-form-label\"\n              >\n                <h5>Fecha de inicio</h5>\n              </label>\n              <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-6\">\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  id=\"startDate\"\n                  onChange={ev => this.props.setStartDate(ev.target.value)}\n                  min={moment()\n                    .add(1, \"d\")\n                    .format(\"YYYY-MM-DD\")}\n                />\n                {this.validator.message(\n                  \"startDate\",\n                  this.props.request.startDate,\n                  \"required\"\n                )}\n              </div>\n              {/*<div className=\"col-sm-4\" />*/}\n            </div>\n\n            <Schedule\n              title=\"Horario deseado para los tours\"\n              scheduleType=\"travelSchedule\"\n              start=\"09:00\"\n              end=\"18:00\"\n              onTimeChange={this.onTimeChange}\n              validator={this.validator}\n              wtf={this.props.request.travelSchedule}\n            />\n\n            <Schedule\n              title=\"Hora deseada de almuerzo\"\n              scheduleType=\"lunchTime\"\n              start=\"13:00\"\n              end=\"14:00\"\n              onTimeChange={this.onTimeChange}\n              validator={this.validator}\n              wtf={this.props.request.lunchTime}\n            />\n\n            <h5>Sitios que te gustaría visitar:</h5>\n            {this.validator.message(\n              \"categories\",\n              this.props.request.categories,\n              \"min:1\"\n            )}\n            <div className=\"row\">\n              <div className=\"col-1\" />\n              <div className=\"row col-10\">\n                {preferences_options.map((option, index) => (\n                  <div\n                    key={`wtf${index}`}\n                    className=\"col-4 custom-control custom-checkbox\"\n                  >\n                    <input\n                      id={`check${index}`}\n                      type=\"checkbox\"\n                      className=\"custom-control-input\"\n                      value={option.value}\n                      onChange={this.handleSelectCategory}\n                    />\n                    <label\n                      htmlFor={`check${index}`}\n                      className=\"custom-control-label\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {option.text}\n                    </label>\n                  </div>\n                ))}\n              </div>\n              <div className=\"col-1\" />\n            </div>\n            <h5>Lugar de hospedaje</h5>\n            {this.validator.message(\n              \"location\",\n              this.props.request.location,\n              \"required\"\n            )}\n            <SearchMapComponent setLocation={this.props.setLocation} />\n\n            <div className=\"row\">\n              <div className=\"col-1\" />\n              <div className=\"col-10\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-pill btn-success btn-lg btn-block\"\n                >\n                  Generar itinerarios\n                </button>\n              </div>\n              <div className=\"col-1\" />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.validator.allValid()) {\n      this.props.history.push(\"/tours\");\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n\n  handleSelectCategory = e => {\n    const { checked, value } = e.target;\n\n    if (checked) {\n      this.props.updateCategories([...this.props.request.categories, value]);\n    } else {\n      this.props.updateCategories(\n        this.props.request.categories.filter(v => v !== value)\n      );\n    }\n  };\n\n  handleDays = e => {\n    const new_number = Number(e.target.value);\n    this.props.setDays(new_number > 0 ? new_number : 1);\n  };\n\n  onTimeChange = (ev, scheduleType, time) =>\n    this.props.setTime(\n      scheduleType,\n      time,\n      ev === null ? ev : ev.format(\"HHmm\")\n    );\n}\n\nconst Schedule = ({\n  title,\n  scheduleType,\n  start,\n  end,\n  onTimeChange,\n  wtf,\n  validator\n}) => (\n  <div className=\"form-group\">\n    <h5>{title}</h5>\n    <div className=\"form-inline\">\n      <div className=\"col-1\" />\n      <LabelTimePicker\n        className=\"col-lg-4 col-md-4 col-sm-12\"\n        labelText=\"Inicio\"\n        defaultTime={start}\n        onTimeChange={onTimeChange}\n        schedule={scheduleType}\n        time=\"start\"\n        validator={validator}\n        wtf={wtf}\n      />\n      <div className=\"col-2\" />\n      <LabelTimePicker\n        className=\"col-lg-4 col-md-4 col-sm-12\"\n        labelText=\"Fin\"\n        defaultTime={end}\n        onTimeChange={onTimeChange}\n        schedule={scheduleType}\n        time=\"end\"\n        validator={validator}\n        wtf={wtf}\n      />\n      <div className=\"col-1\" />\n    </div>\n  </div>\n);\n\nconst LabelTimePicker = ({\n  labelText,\n  defaultTime,\n  onTimeChange,\n  schedule,\n  time,\n  validator,\n  wtf\n}) => (\n  <>\n    <div className=\"form-group row\">\n      <label\n        htmlFor=\"travelStart\"\n        className=\"col-form-label\"\n        style={{ marginRight: \"0.5rem\" }}\n      >\n        {labelText}\n      </label>\n      <TimePicker\n        id=\"travelStart\"\n        defaultValue={moment(defaultTime, \"HH:mm\")}\n        format=\"HH:mm\"\n        onChange={ev => onTimeChange(ev, schedule, time)}\n        placeholder=\"HH:mm\"\n      />\n      {validator.message(time, wtf[time], \"required\")}\n    </div>\n  </>\n);\n\nconst mapStateToProps = state => ({\n  request: { ...state }\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDays: days => dispatch(setDaysAction(days)),\n  setStartDate: date => dispatch(setStartDateAction(date)),\n  updateCategories: categories => dispatch(updateCategoriesAction(categories)),\n  setTime: (type, time, newTime) =>\n    dispatch(setTimeAction(type, time, newTime)),\n  setLocation: location => dispatch(setLocationAction(location))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(PreferencesFormComponent));\n","import Actions from \"./actionTypes\";\n\nexport const setDaysAction = days => ({\n  type: Actions.SET_DAYS,\n  payload: {\n    days\n  }\n});\n\nexport const setStartDateAction = newDate => ({\n  type: Actions.SET_START_DATE,\n  payload: {\n    newDate\n  }\n});\n\nexport const updateCategoriesAction = categories => ({\n  type: Actions.UPDATE_CATEGORIES,\n  payload: {\n    categories\n  }\n});\n\nexport const setTimeAction = (type, time, newTime) => ({\n  type: Actions.SET_SCHEDULE_TIME,\n  payload: {\n    type,\n    time,\n    newTime\n  }\n});\n\nexport const setLocationAction = location => ({\n  type: Actions.SET_USER_LOCATION,\n  payload: {\n    location\n  }\n});\n\nexport const setFetchedDataAction = data => ({\n  type: Actions.SET_FETCHED_DATA,\n  payload: {\n    data\n  }\n});\n","/* eslint-disable no-undef */\nimport React from \"react\";\nimport { compose, withStateHandlers, withProps } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n  Polyline\n} from \"react-google-maps\";\n\nconst enhance = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCKzbdK1wXzCIQf7UAMxpTgV6S5l2AjRGc&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `1000px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n  withGoogleMap\n);\n\nconst colours = [\n  \"FF851B\",\n  \"01FF70\",\n  \"0074D9\",\n  \"FF4136\",\n  \"a52a2a\",\n  \"00ffff\",\n  \"00008b\",\n  \"a9a9a9\",\n  \"006400\",\n  \"bdb76b\",\n  \"8b008b\",\n  \"556b2f\",\n  \"ff8c00\",\n  \"9932cc\",\n  \"8b0000\",\n  \"e9967a\",\n  \"ff00ff\",\n  \"4b0082\",\n  \"f0e68c\",\n  \"add8e6\",\n  \"e0ffff\",\n  \"90ee90\",\n  \"d3d3d3\",\n  \"ffb6c1\",\n  \"ffffe0\",\n  \"00ff00\",\n  \"800000\",\n  \"808000\",\n  \"ffa500\",\n  \"ffc0cb\",\n  \"800080\",\n  \"800080\",\n  \"ff0000\"\n];\n\nconst SingleRoute = props => (\n  <GoogleMap defaultZoom={15} defaultCenter={{ ...props.tour[0].location }}>\n    <PointsComponent\n      key={`tour${props.n}`}\n      name={`tour${props.n}`}\n      color={colours[props.n]}\n      tour={props.tour}\n    />\n\n    {props.restaurants.map((restaurant, i) => (\n      <CustomMarker\n        key={`restaurant${i}`}\n        {...restaurant}\n        position={{ ...restaurant.location }}\n        icon={process.env.PUBLIC_URL + \"restaurant.png\"}\n      />\n    ))}\n  </GoogleMap>\n);\n\nconst MultipleRoutes = props => (\n  <GoogleMap\n    defaultZoom={15}\n    defaultCenter={{ ...props.data[0].tour[0].location }}\n  >\n    {props.data\n      .reduce((tours, { tour }) => [...tours, tour], [])\n      .map((tour, i) => (\n        <PointsComponent\n          key={`tour${i}`}\n          name={`tour${i}`}\n          color={colours[i]}\n          tour={tour}\n        />\n      ))}\n\n    {props.data\n      .reduce((all, { restaurants }) => [...all, ...restaurants], [])\n      .map((restaurant, i) => (\n        <CustomMarker\n          key={`restaurant${i}`}\n          {...restaurant}\n          position={{ ...restaurant.location }}\n          icon={process.env.PUBLIC_URL + \"restaurant.png\"}\n        />\n      ))}\n  </GoogleMap>\n);\n\nexport const SingleRouteMap = enhance(SingleRoute);\nexport const MultipleRoutesMap = enhance(MultipleRoutes);\n\nconst PointsComponent = ({ name, tour, color }) => {\n  let n = 0;\n\n  return (\n    <>\n      {tour.map((elem, i) => {\n        switch (elem.type) {\n          case \"poi\":\n            n++;\n            return (\n              <CustomMarker\n                key={`${name}-${i}`}\n                position={{ ...elem.location }}\n                {...elem}\n                icon={`http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=${n}|${color}`}\n              />\n            );\n\n          case \"route\":\n            return (\n              <Polyline\n                key={`${name}-${i}`}\n                path={google.maps.geometry.encoding.decodePath(elem.points)}\n                options={{ strokeColor: `#${color}` }}\n              />\n            );\n\n          case \"home\":\n            return (\n              <Marker\n                key={`${name}-${i}`}\n                position={elem.location}\n                icon={process.env.PUBLIC_URL + \"home.png\"}\n              >\n                {\" \"}\n              </Marker>\n            );\n\n          default:\n            return null;\n        }\n      })}\n    </>\n  );\n};\n\nconst CustomMarker = compose(\n  withStateHandlers(\n    () => ({\n      isOpen: false\n    }),\n    {\n      onToggleOpen: ({ isOpen }) => () => ({\n        isOpen: !isOpen\n      })\n    }\n  )\n)(props => (\n  <Marker\n    position={props.position}\n    onClick={props.onToggleOpen}\n    icon={props.icon}\n  >\n    {props.isOpen && (\n      <InfoWindow onCloseClick={props.onToggleOpen}>\n        <div>\n          <h6>{props.name}</h6>\n          <p>\n            <b>Inicio: </b>\n            {props.schedule.start}\n          </p>\n          <p>\n            <b>Fin: </b>\n            {props.schedule.end}\n          </p>\n          <p>\n            <b>Sitio web: </b>\n            <a href={props.website} target=\"_blank\" rel=\"noopener noreferrer\">\n              {props.website}\n            </a>\n          </p>\n          <p>\n            <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              Más detalles\n            </a>\n          </p>\n        </div>\n      </InfoWindow>\n    )}\n  </Marker>\n));\n","import React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport { SingleRouteMap, MultipleRoutesMap } from \"./RouteMap\";\nimport axios from \"axios\";\nimport { setFetchedDataAction } from \"../redux/actions\";\n\nclass ToursComponent extends Component {\n  state = {\n    loading: false,\n    selected: -1\n  };\n\n  componentDidMount() {\n    if (this.props.data.length === 0) {\n      this.setState({ loading: true });\n\n      axios\n        .post(\"/ttdp\", this.props.request)\n        .then(response => {\n          this.setState({ loading: false });\n          this.props.setFetchedData(response.data);\n        })\n        .catch(err => {\n          this.setState({ loading: false });\n          alert(err.message);\n        });\n    }\n  }\n\n  toRender = () => {\n    if (this.state.selected === -1) {\n      return this.props.data.length > 0 ? (\n        <MultipleRoutesMap data={this.props.data} />\n      ) : null;\n    } else\n      return (\n        <>\n          <SingleRouteMap\n            {...this.props.data[this.state.selected]}\n            n={this.state.selected}\n          />\n          <br />\n          <h5>Detalles</h5>\n          <TourDetails tour={this.props.data[this.state.selected].tour} />\n        </>\n      );\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.loading ? (\n          <div className=\"override\">\n            <Loader type=\"CradleLoader\" />\n          </div>\n        ) : (\n          <div className=\"container center_form\">\n            <div className=\"card\" style={{ backgroundColor: \"#FDFCF9\" }}>\n              <h1 className=\"card-title text-center\">Resultados TTDP</h1>\n              <div className=\"card-body\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"toursSelect\">\n                    <h5>Selecciona el tour:</h5>\n                  </label>\n                  <select\n                    className=\"form-control\"\n                    id=\"toursSelect\"\n                    style={{ cursor: \"pointer\" }}\n                    onChange={this.handleSelected}\n                  >\n                    <option defaultValue={-1} value={-1}>\n                      Todos\n                    </option>\n                    {this.props.data.map((_, i) => (\n                      <option key={i} value={i}>\n                        Día {i + 1}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                {this.toRender()}\n              </div>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n\n  handleSelected = ev => {\n    this.setState({ selected: Number(ev.target.value) });\n  };\n}\n\nconst TourDetails = props => (\n  <div>\n    <table className=\"table table-striped\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Horario</th>\n          <th scope=\"col\">Evento</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.tour.slice(1).map((elem, i, tour) => {\n          switch (elem.type) {\n            case \"route\":\n              return (\n                <tr>\n                  <th scope=\"row\">\n                    {elem.schedule.start} - {elem.schedule.end}\n                  </th>\n                  <td>\n                    Salida hacia{\" \"}\n                    {tour[i + 1].type === \"poi\"\n                      ? tour[i + 1].name\n                      : tour[i + 2].name}\n                  </td>\n                </tr>\n              );\n            case \"poi\":\n              return (\n                <tr>\n                  <th scope=\"row\">\n                    {elem.schedule.start} - {elem.schedule.end}\n                  </th>\n                  <td>Visita de {elem.name}</td>\n                </tr>\n              );\n\n            case \"lunch\":\n              return (\n                <tr>\n                  <th scope=\"row\">\n                    {elem.schedule.start} - {elem.schedule.end}\n                  </th>\n                  <td>Hora de almuerzo</td>\n                </tr>\n              );\n\n            default:\n              return null;\n          }\n        })}\n      </tbody>\n    </table>\n  </div>\n);\n\nconst mapStateToProps = state => {\n  const { fetchedData, ...request } = state;\n\n  return {\n    request,\n    data: fetchedData\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setFetchedData: data => dispatch(setFetchedDataAction(data))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToursComponent);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport PreferencesForm from \"./components/PreferencesForm\";\nimport Tours from \"./components/Tours\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={PreferencesForm} />\n          <Route path=\"/tours\" component={Tours} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import Actions from \"./actionTypes\";\n\nconst initialState = {\n  totalDays: \"\",\n  startDate: null,\n  location: null,\n  travelSchedule: {\n    start: \"0900\",\n    end: \"1800\"\n  },\n  lunchTime: {\n    start: \"1300\",\n    end: \"1400\"\n  },\n  categories: [],\n  fetchedData: []\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Actions.SET_DAYS: {\n      return {\n        ...state,\n        totalDays: action.payload.days\n      };\n    }\n    case Actions.SET_START_DATE: {\n      return {\n        ...state,\n        startDate: action.payload.newDate\n      };\n    }\n\n    case Actions.UPDATE_CATEGORIES: {\n      return {\n        ...state,\n        categories: action.payload.categories\n      };\n    }\n\n    case Actions.SET_SCHEDULE_TIME: {\n      const { type, time, newTime } = action.payload;\n\n      return {\n        ...state,\n        [type]: {\n          ...state[type],\n          [time]: newTime\n        }\n      };\n    }\n\n    case Actions.SET_USER_LOCATION: {\n      return {\n        ...state,\n        location: action.payload.location\n      };\n    }\n\n    case Actions.SET_FETCHED_DATA:\n      return {\n        ...state,\n        fetchedData: action.payload.data\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport { rootReducer } from \"./reducer\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from './redux/store'\n\n// import Example from './Example.js';\n// ReactDOM.render(<Example />, document.getElementById('root'));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}